# TEMP, TESTING NEW VERSION OF SCRAPING CODE
# This workflow scrapes SMC COVID data from the SMC dashboards
# Code based on https://github.com/mattkerlogue/google-covid-mobility-scrape/blob/master/.github/workflows/main.yaml 
# and https://github.com/marketplace/actions/github-push
# Uses starting selenoid server from https://github.com/marketplace/actions/start-selenoid-server

name: ACT COVID Scraping Testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]
#  schedule:
#    - cron: '30 18 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scrape"
  scrape:
    # The type of runner that the job will run on. Needs to be ubuntu to use the start selenoid server action
    runs-on: ubuntu-latest
    #runs-on: ubuntu-18.04
    
    steps:
    # Start selenoid server
    - name: Start selenoid
      uses: Xotabu4/selenoid-github-action@v1
        # Checks-out the repository
    - uses: actions/checkout@v2
  #    with:
  #      fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
        
    # Install R
    - uses: r-lib/actions/setup-r@master
      with:
        r-version: '4.0.2'

    # Set up R. Note the first line was needed to make sure the curl package worked
    - name: Install R packages
      run: |
        R -e 'install.packages("tidyverse")'
        R -e 'install.packages("RSelenium")'
        R -e 'install.packages("seleniumPipes")'
        R -e 'install.packages("plyr")'
        R -e 'install.packages("rvest")'
    # Run R script to scrape data
    - name: Scrape data
      run: R -e 'source("health_act_page.R", echo = TRUE)'
      
 # Add new files in data folder, commit along with other modified files, push
    - name: Commit files
      run: |
        git config --local user.name actions-user
        git config --local user.email "actions@github.com"
        git add data/*
        git commit -am "GH ACTION Headlines $(date)"
        git push origin main
      env:
        REPO_KEY: ${{secrets.GITHUB_TOKEN}}
        username: github-actions
